{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/ErrorNotification.js","components/SuccessNotification.js","components/Footer.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","placeholder","value","onChange","PersonForm","onSubmit","namevalue","namechange","numbervalue","numberchange","type","Person","name","number","onClick","deletePerson","id","ErrorNotification","message","className","SuccessNotification","Footer","style","color","fontStyle","fontSize","href","baseUrl","axios","get","then","response","data","newObject","post","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","showAll","setShowAll","errorMessage","successMessage","setSuccessMessage","useEffect","personService","initialPersons","person","undefined","console","log","window","confirm","filter","contact","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","oldNumber","oldID","namesArray","map","oldPerson","length","newPerson","alert","returnedPerson","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f07e7e1d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n          filter shown with <input placeholder=\"insert filter word...\" value={props.value} onChange={props.onChange}/>\n        </div>\n    )\n  }\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n      <form onSubmit={props.onSubmit}>\n        <div>\n          name: <input placeholder=\"Type name...\" value={props.namevalue} onChange={props.namechange}/>\n        </div>\n        <div>\n          number: <input placeholder=\"Type number...\" value={props.numbervalue} onChange={props.numberchange}/></div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n  }\n\nexport default PersonForm","import React from 'react'\n\nconst Person = (props) => {\n    return(\n      <li key={props.id}> {props.name} {props.number} \n        <button onClick={props.deletePerson}>\n                delete\n        </button>\n      </li>\n    )\n}\n\nexport default Person","import React from 'react'\n\nconst ErrorNotification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default ErrorNotification","import React from 'react'\n\nconst SuccessNotification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n\nexport default SuccessNotification","import React from \"react\"\n\nconst Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>The phonebook app, by Javier Ramos (<a href=\"mailto:jiramos87@gmail.com\">jiramos87@gmail.com</a>), as an assignment for the Fullstack open course by the Department of Computer Science, University of Helsinki 2021</em>\n      </div>\n    )\n}\n\nexport default Footer\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport ErrorNotification from './components/ErrorNotification'\nimport SuccessNotification from './components/SuccessNotification'\nimport Footer from './components/Footer'\nimport personService from './services/persons'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  const [ successMessage, setSuccessMessage ] = useState(null)\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const namesArray = persons.map((person) => person.name)\n    let oldPerson = persons.filter(person => person.name === newName)\n    let oldNumber\n    let oldID\n    if(oldPerson.length !== 0) {\n      console.log('oldPerson name: ', oldPerson[0].name)\n      oldNumber = oldPerson[0].name.number\n      oldID = oldPerson[0].name.id\n    }\n\n    let newPerson = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    }\n\n    if(namesArray.includes(newName) && oldPerson.length !== 0) {\n       if(oldNumber !== newNumber) {\n         if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) )\n          {\n              newPerson = {\n              name: newName,\n              number: newNumber,\n              id: oldID\n            }\n            deletePerson(oldPerson[0]) \n          } else {\n              newPerson = {\n              name: newName,\n              number: oldNumber,\n              id: oldID\n            }\n            deletePerson(oldPerson[0])\n          } \n       } else {\n         window.alert(`${newName} is already added to phonebook with the same number`)\n       } \n    }\n\n    personService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setSuccessMessage(\n          `Person ${newPerson.name} was added to the server`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n        setNewFilter('')\n      })\n\n  }\n\n  const deletePerson = (person) => {\n    if(person !== undefined) {\n      if(window.confirm(`Delete ${person.name}?`)) {  \n        personService\n          .deletePerson(person.id, person)\n          .then(setPersons(persons.filter(contact => contact.id !== person.id)))\n          setSuccessMessage(\n            `Person ${person.name}'s number was changed`\n          )\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n          /* .catch(error => {\n            setErrorMessage(\n              `Person '${person.name}' was already removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== person.id))\n          }) */\n      } else {\n          return null\n      } \n    } else {\n      console.log('person undefined')\n      return null\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setShowAll(false)\n    setNewFilter(event.target.value)\n  }\n\n\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage} />\n      <ErrorNotification message={errorMessage} />\n      <Filter value={newFilter} onChange={handleFilterChange}/>\n      <h2>Add a new</h2>\n      <PersonForm onSubmit={addPerson} \n                  namevalue={newName} namechange={handleNameChange}\n                  numbervalue={newNumber} numberchange={handleNumberChange}/>\n      \n      <h2>Numbers</h2>\n      <ul>\n        {personsToShow.map( person => \n         <Person id={person.id} name={person.name} number={person.number} deletePerson={() => deletePerson(person)}/>)\n        }\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}